I"y<p>I really like using static site generators. I guess the computer scientist in me likes optimized systems, and that’s exactly what I get here: static sites  make for a secure, performant and simple setup. It doesn’t get much more basic than serving static files with Nginx. It’s rather hard convincing myself to manage a big PHP framework and an SQL database just to show some blog posts, but I am painfully aware of how much easier to use Wordpress is for the users. Compare Wordpress’ workflow to that of a static site: even though making changes to my Jekyll site may seem rather easy to me, it really isn’t that straightforward. Here’s how I’ve done it up until this point:</p>

<ol>
  <li>Write a post in Markdown</li>
  <li>Optimize images manually</li>
  <li>Commit changes to GitHub</li>
  <li>Build the site on my local machine</li>
  <li>Compress generated HTML and CSS files</li>
  <li>Manually transfer the changed files to the server</li>
</ol>

<p>Good luck trying to convince your clients to use a static site if this is what it takes for them to do a simple task, like fixing a typo. Getting your content online requires knowledge about Markdown, compression, git, command line, and file transfer. That’s a very steep learning curve if you aren’t very technically inclined. It’s also a rather tedious process. What if we could reduce it to one or two steps?</p>

:ET